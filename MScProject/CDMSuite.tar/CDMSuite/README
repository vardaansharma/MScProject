---------------------------------------------------------
### Community Detection using Modulairty Suite (2012) ###
### Suite of Modualrity based community detection     ###
### algorithms                                        ###
### Dr. Colin Mclean <cmclean5@staffmail.ed.ac.uk>    ###
---------------------------------------------------------

Based on the fast community algorithm implemented by Aaron Clauset <aaron@cs.unm.edu>, Chris Moore, Mark Newman, and the R IGraph library Copyright (C) 2007  Gabor Csardi <csardi@rmki.kfki.hu>.

CDMSuite is an Rcpp suite containing three community detection algorithms based on the Modularity measure containing: Geodesic and Random Walk edge Betweenness [1] and Spectral Modularity [2]. 

----------------------------
*** TO INSTALL AND BUILD ***
----------------------------

(1) The suite should be downloaded and untarred within a convieniant location. 

(2) The suite requires R version 2.14.0, or higher.

(3) The suite requires the Rcpp package (version 0.9.10 or higher) to be installed. Within R type:

    > install.packages("Rcpp")

(4) The can then be install on the command line by typing:

    > R CMD INSTALL CDMSuite

----------------------------
***       TO RUN         ***
----------------------------

To run the clustering package on R type the following:

 > require("CDMSuite")
 > output <- CDMSuite(Network="absolute_path_to_network_file")

This will execute the Geodeic edge Betweenness algorithm on the network file. The first argument ("seed") sets the random number seed; the second argument ("algorithm") selects which of the three algorithms to execute: 1 = Geodesic egde Betweenness, 2 = Random Walk edge Betweenness, 3 = Spectral Modularity. The third argument ("weighted") indicates whether the network file is weighted = w, or unweighted = nw. The final argument ("network") is the network file to be analised. 

The network file can have a single header line at the begining. After this, the first two tab separated columns contain the numerical IDs of the network edges, and the additional third column the edge weights. For example network_file.txt could look like this:

    #PPI 1
    10006 10458
    7316 10152
    6709 10006

In R the user can obtain help on running the suite by typing the following:
> help()
[1] "CDMSuite requires 4 arguments: "
[1] "argument 1: random number seed  "
[1] "argument 2: the type of algorithm to run "
[1] "          : 1 = Geodesic edge Betweenness"
[1] "          : 2 = Random edge Betweenness"
[1] "          : 3 = Spectral Betweenness"
[1] "argument 3: specify if network file is *weighted or not: "
[1] "          : w  = Using a weighted network file "
[1] "          : nw = Using a non-weighted network file "
[1] "argument 4: the network file to run  "
[1] "Example   : ./run 1 1 testData/Kirate.wpairs "
[1] "*         : The structure of the network file is:"
[1] "w         : A (interactor) \t B (interactor) \t W (weight) "
[1] "nw        : A (interactor) \t B (interactor) "
[1] "          : Where A and B are integers and W is a double."

----------------------------
***      References      ***
----------------------------

 [1] M. Newman & M. Girvan. Finding and evaluating community structure in networks. Physical Review, E 69 (026113), 2004.

 [2] M. Newman. Finding community structure in networks using the eigenvectors of matrices. Physical Review E, 74(3):036104, 2006.